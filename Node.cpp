//****************************************************************************
//
//
//
//****************************************************************************


 
 
// ===========================================================================
//                                   Libraries
// ===========================================================================



// ===========================================================================
//                                 Project Files
// ===========================================================================
#include "Node.h"





//############################################################################
//                                                                           #
//                           Class Template_class                            #
//                                                                           #
//############################################################################

// ===========================================================================
//                         Definition of static attributes
// ===========================================================================

// ===========================================================================
//                                  Constructors
// ===========================================================================
Node::Node(void)
{
	next = NULL;
	obj = NULL;
}


Node::Node(Image i)
{
	next = NULL; 
	obj = &i;

}

//mais pq serait interdit qd je veux juste modifier l'adresse du next ? 
Node::Node(const Node& model)
{
	printf("%s:%d: error: call to forbidden constructor.\n", __FILE__, __LINE__);
    exit(EXIT_FAILURE);
}

// ===========================================================================
//                                  Destructor
// ===========================================================================
Node::~Node(void)
{
}

// ===========================================================================
//                                 Public Methods
// ===========================================================================


//add a Node to the list and change the attribute next of the precedent node
/*void Node::Next(Node before)
{
	before.next = &Node;

}*/

Node* Node::getNext(void) const
{
	return next;

}

Image* Node::getObj(void) const
{
	printf("L'image contenue dans le noeud a une largeur de %d.\n", (*obj).getWidth());
	return obj;
}

//change the adress of the node which is next manually
 void Node::setNext(Node n)
 {
 	next= &n;
 }

// ===========================================================================
//                                Protected Methods
// ===========================================================================


// ===========================================================================
//                               Non inline accessors
// ===========================================================================
